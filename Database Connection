package database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

public class DatabaseConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/hospital_appointment_system?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "@Tanishka11";
    private static Connection connection = null;
    private static int connectionCount = 0;

    public static synchronized Connection getConnection() throws SQLException {
        try {
            if (connection == null || connection.isClosed()) {
                Class.forName("com.mysql.cj.jdbc.Driver");
                
                Properties props = new Properties();
                props.setProperty("user", USERNAME);
                props.setProperty("password", PASSWORD);
                props.setProperty("useSSL", "false");
                props.setProperty("allowPublicKeyRetrieval", "true");
                props.setProperty("serverTimezone", "UTC");
                props.setProperty("autoReconnect", "true");
                props.setProperty("maxReconnects", "3");
                props.setProperty("connectTimeout", "10000");
                props.setProperty("socketTimeout", "60000");
                
                connection = DriverManager.getConnection(URL, props);
                if (connection != null) {
                    System.out.println("Database connection established successfully!");
                }
            }
            connectionCount++;
            return connection;
        } catch (ClassNotFoundException | SQLException e) {
            System.err.println("Error connecting to database: " + e.getMessage());
            e.printStackTrace();
            throw new SQLException("Failed to establish database connection: " + e.getMessage());
        }
    }

    public static synchronized void closeConnection() {
        if (connection != null) {
            connectionCount--;
            if (connectionCount <= 0) {
                try {
                    connection.close();
                    connection = null;
                    connectionCount = 0;
                    System.out.println("Database connection closed successfully!");
                } catch (SQLException e) {
                    System.err.println("Error closing database connection: " + e.getMessage());
                }
            }
        }
    }

    public static synchronized boolean isConnectionActive() {
        try {
            return connection != null && !connection.isClosed();
        } catch (SQLException e) {
            return false;
        }
    }
} 
